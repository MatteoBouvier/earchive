name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  
jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ "3.12" ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Setup Poetry
        uses: abatilo/actions-poetry@v3.0.1
        
      - name: Setup a virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          
      - name: Define a cache for the virtual environment
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
          
      - name: Install project dependencies
        run: poetry install --extras ci
        
      - name: Vulture
        run: poetry run vulture earchive vulture_whitelist.py --exclude earchive/lib

      - name: Ruff
        run: poetry run ruff check earchive
        
      - name: Mypy
        run: poetry run mypy --strict earchive --exclude earchive/lib
        
      - name: Test
        run: poetry run pytest -v
